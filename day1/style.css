/*
html과 css는 매칭관게
한 html에 다수의 css를 적용할 수 있다.
css는 이쁘게 만드는게 목적이다.
html도 적용 가능한 요소이다. 스타트.
*/

/*
selector (선택자) 
특정 html을 지목한다.

*/

html {
    /*
    html요소를 html 문서의 루트 요소
    */
}

body {
    
    /*
    3가지 중요.
    font-family
    font-size
    line-height
    */
    
    /*
    폰트변경 필요.
    font-family
    속성명: 속성값
    속성값 (폰트명)
    맥 아이폰 웹의 기본 폰트는 apple sd gothic neo (산돌고딕네오)
    윈도우는 맑은고딕, 맑은 고딕, malgun gothic 다양함 (기본)
    윈도우는 돋움, dotum 다양함 (많이 쓴다)
    윈도우는 굴림, gulim 도 쓴다.
    우리가 모르는 os가 있을수있다. 전세계 기본 os 폰트를 알수가 없다.
    그래서 generic font 가 있다. // 모든 폰트를 알 수 없다.
    
    아래 3가지 자주 사용
    serif (삐침이 있는, 명조)
    sans-serif (삐침이 없는, 고딕)
    monospace (고정폭)
    fantasy (괴상 만화체 등)

    앞에서 순서로 폰트를 찾아 적용. 폰트 있을때까지 넘어간다.
    폰트에 한글이 없으면, 뒤로 넘어가서 한글만 뒤 폰트로 적용.
    헬베티카만 영문 나머지 한글은 산세리프로 보여준다.
    영문폰트를 먼저쓰고, 한글 폰트를 다음에 쓰면 위 스킬 가능.

    한중일(CJK font) 특징은 하나의 폰트에 다 있다.
    안드로이드 2.0때 droid sans 기본 폰트였다.(영문용)
    안드로이드 4.0때 roboto (영문용)
    한글은 droid sans callback에 다 때려넣음. // bold가 없었던 적이 있었다.
    지금은 noto sans 기본 폰트로 적용중이다.
    안드로이드 7.0때 // 되도록이면 noto sans로 강제 (폰트 못 바꾸게 권장 중)
    안드로이드는 유저가 폰트 바꾸면, 개발 대응이 어려워진다. (7.0 전 버전은)
    UI개발은 사용자와 밀접해서, 특이한 온갖 오류를 만나게 된다. 즐기는게 답이다.
    
    sans-serif는 필수다. 꼭 넣자. (예: 특정 폰트만 명조체로 나올 수 있음) 혹은 세리프.
    폰트에 맞는 기본 generic font를 꼭! 넣자. 안 그러면 볼품없게 작품이 나온다.
    코드리뷰할때 꼭 본다.
    */

    font-family: "Helvetica NEUE", sans-serif;

    font-size: 1em;
    /*
    -font-size
    값: 단위
    px: 픽셀 (어떤 단위든 마지막에는 px단위로 보인다. 그래서 정확하다)
    em: 자기 자신의 폰트 사이즈를 비례해서 증가.
    만약 font-size 속성에 em 단위를 쓴 경우
    ***이 단위는 부모요소의 폰트사이즈에 비례한다. (기본 개념)
    부모요소, 즉 html의 폰트 사이즈를 기준으로 한다. (보통 16px)
    그래서 1 em 은 16px이 된다.(html 폰트 사이즈로 기준으로 잡는다.)
    0.1em = 1.6px
    0.065 = 1px // 얼추 맞는다.

    -em의 장점이 무엇인가?
    폰트에 em 쓰면 부모요소 기준 따라간다.
    폰트사이즈 정말 중요. 사이 간격 등. 다르게 말하면 다 수정해야한다.
    픽셀은 그래서 유연하지 못하다. 또 유저가 폰트 크기 바꾸는 경우도 있다.
    em은 폰트 사이즈에서 유연하다. 모바일 사이트에서 유용. 근대 px로 짜면 다 고쳐야한다.
    단점은 계산하기 어렵다.

    -힘들어서 rem이 나왔다.
    rem 은 루트요소 폰트사이즈를 기준으로 가져간다.
    1rem = 16px (무조건 html 요소의 폰트 사이즈에 비례) // 루트요소
    단점은 브라우저 지원율이 낮다.
    IE9부터 부분 지원.

    - %
    부모요소의 폰트사이즈에 비례한다.
    100% = 16px (html이 16px 이니까)
    
    */

    line-height: 1.8em;
    /*
    line-height
    행간.
    픽셀 맞출때 쉬워진다.
    */
}

h1 {
    /*
    body 요소의 폰트사이즈를 기준으로 증가.
    2em = 32px
    */
    font-size: 2em;

    /*
    패딩은 자기 자신의 폰트사이즈를 기준으로 함.
    자기 자신의 폰트 사이즈 기준.
    즉 fontsize가 32px(2em)이니까 64px가 된다.
    */
    padding: 2em;
}

p {
    font-size: 1em;
}